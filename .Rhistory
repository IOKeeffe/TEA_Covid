errors,
error_percentage,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students,
undercounted_percentage,
)
library(tidyverse)
large_district_data <- large_districts %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(error_percentage = round(errors/9 * 100, digits=2 )) %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(DISTRICT, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/ENROLLMENT * 100, digits=2)) %>%
mutate(undercounted_crisis_students = ENROLLMENT - total_crisis_students) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/ENROLLMENT * 100, digits=2)) %>%
summarize(
DISTRICT.NAME,
CRISIS.CODE,
ENROLLMENT,
errors,
error_percentage,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students,
undercounted_percentage,
)
large_district_data <- large_districts %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(error_percentage = round(errors/9 * 100, digits=2 )) %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(DISTRICT, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/ENROLLMENT * 100, digits=2)) %>%
mutate(undercounted_crisis_students = ENROLLMENT - total_crisis_students) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/ENROLLMENT * 100, digits=2)) %>%
summarize(
DISTRICT.NAME,
CRISIS.CODE,
ENROLLMENT,
errors,
error_percentage,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students,
undercounted_percentage,
REGION,
)
View(esc_region_summary)
View(esc_enrollment_data)
View(region_enrollment_data)
esc_region_simplified_summary <- esc_crisis_counts %>%
# group_by(REGION) %>%
mutate(crisis_code_summary = ifelse(CRISIS.CODE == "7A", "Fully Engaged", "All Other variables")) %>%
group_by(REGION, crisis_code_summary) %>%
mutate(crisis_student_count = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
summarize(
REGION,
region_enrollment,
crisis_student_count,
# crisis_student_count,
# crisis_student_count,
crisis_code_summary,
.groups = "keep"
) %>%
distinct()
View(esc_region_summary)
View(esc_region_simplified_summary)
summarize(
REGION,
region_enrollment,
crisis_student_count,
crisis_percentage,
# crisis_student_count,
crisis_code_summary,
.groups = "keep"
) %>%
distinct()
esc_region_simplified_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_code_summary = ifelse(CRISIS.CODE == "7A", "Fully Engaged", "All Other variables")) %>%
group_by(REGION, crisis_code_summary) %>%
mutate(crisis_student_count = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_student_count / total_students * 100, digits=2))
esc_region_simplified_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_code_summary = ifelse(CRISIS.CODE == "7A", "Fully Engaged", "All Other variables")) %>%
group_by(REGION, crisis_code_summary) %>%
mutate(crisis_student_count = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_student_count / total_students * 100, digits=2))
esc_region_simplified_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_code_summary = ifelse(CRISIS.CODE == "7A", "Fully Engaged", "All Other variables")) %>%
group_by(REGION, crisis_code_summary) %>%
mutate(crisis_student_count = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_student_count / total_students * 100, digits=2)) %>%
summarize(
REGION,
region_enrollment,
crisis_student_count,
crisis_percentage,
.groups = "keep"
) %>%
distinct()
esc_region_simplified_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_code_summary = ifelse(CRISIS.CODE == "7A", "Fully Engaged", "All Other variables")) %>%
group_by(REGION, crisis_code_summary) %>%
mutate(crisis_student_count = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_student_count / total_students * 100, digits=2)) %>%
summarize(
REGION,
region_enrollment,
total_students,
crisis_student_count,
crisis_percentage,
.groups = "keep"
) %>%
distinct()
esc_region_simplified_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_code_summary = ifelse(CRISIS.CODE == "7A", "Fully Engaged", "All Other variables")) %>%
group_by(REGION, crisis_code_summary) %>%
mutate(crisis_student_count = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_student_count / total_students * 100, digits=2)) %>%
summarize(
REGION,
region_enrollment,
crisis_student_count,
crisis_percentage,
.groups = "keep"
) %>%
distinct()
CRISIS.CODE == "7A" ~ 4 * crisis_students,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
CRISIS.CODE == "7E" ~ 1 * crisis_students,
CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
mutate(crisis_score = case_when(
CRISIS.CODE == "7A" ~ 4 * crisis_students,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
CRISIS.CODE == "7E" ~ 1 * crisis_students,
CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
region_districts,
region_enrollment,
total_region_crisis_count,
REGION,
undercounted_percentage,
region_errors,
region_error_percentage,
crisis_grade,
.groups = "keep"
) %>%
distinct()
CRISIS.CODE == "7A" ~ 4 * crisis_students,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
CRISIS.CODE == "7E" ~ 1 * crisis_students,
CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
CRISIS.CODE == "7A" ~ 4 * crisis_students,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
CRISIS.CODE == "7E" ~ 1 * crisis_students,
CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
mutate(crisis_score = case_when(
CRISIS.CODE == "7A" ~ 4 * crisis_students,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
CRISIS.CODE == "7E" ~ 1 * crisis_students,
CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
REGION,
region_error_percentage,
undercounted_percentage,
# region_districts,
# region_enrollment,
# total_region_crisis_count,
# region_errors,
# crisis_grade,
.groups = "keep"
) %>%
distinct()
CRISIS.CODE == "7A" ~ 4 * crisis_students,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
CRISIS.CODE == "7E" ~ 1 * crisis_students,
CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
mutate(crisis_score = case_when(
CRISIS.CODE == "7A" ~ 4 * crisis_students,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
CRISIS.CODE == "7E" ~ 1 * crisis_students,
CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
REGION,
region_error_percentage,
undercounted_percentage,
# region_districts,
# region_enrollment,
# total_region_crisis_count,
# region_errors,
# crisis_grade,
.groups = "keep"
) %>%
distinct()
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
# mutate(crisis_score = case_when(
#   CRISIS.CODE == "7A" ~ 4 * crisis_students,
#   CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
#   CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
#   CRISIS.CODE == "7E" ~ 1 * crisis_students,
#   CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
REGION,
region_error_percentage,
undercounted_percentage,
# region_districts,
# region_enrollment,
# total_region_crisis_count,
# region_errors,
# crisis_grade,
.groups = "keep"
) %>%
distinct()
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
# mutate(crisis_score = case_when(
#   CRISIS.CODE == "7A" ~ 4 * crisis_students,
#   CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
#   CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
#   CRISIS.CODE == "7E" ~ 1 * crisis_students,
#   CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
REGION,
region_error_percentage,
undercounted_percentage,
# region_districts,
# region_enrollment,
# total_region_crisis_count,
# region_errors,
# crisis_grade,
.groups = "keep"
) %>%
distinct()
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
# mutate(crisis_score = case_when(
#   CRISIS.CODE == "7A" ~ 4 * crisis_students,
#   CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
#   CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
#   CRISIS.CODE == "7E" ~ 1 * crisis_students,
#   CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
REGION,
region_error_percentage,
undercounted_percentage,
# region_districts,
# region_enrollment,
# total_region_crisis_count,
# region_errors,
# crisis_grade,
.groups = "keep"
) %>%
distinct()
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
# mutate(crisis_score = case_when(
#   CRISIS.CODE == "7A" ~ 4 * crisis_students,
#   CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
#   CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
#   CRISIS.CODE == "7E" ~ 1 * crisis_students,
#   CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(crisis_score)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
# mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
REGION,
region_error_percentage,
undercounted_percentage,
# region_districts,
# region_enrollment,
# total_region_crisis_count,
# region_errors,
# crisis_grade,
.groups = "keep"
) %>%
distinct()
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
# mutate(crisis_score = case_when(
#   CRISIS.CODE == "7A" ~ 4 * crisis_students,
#   CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
#   CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
#   CRISIS.CODE == "7E" ~ 1 * crisis_students,
#   CRISIS.CODE == "7B" ~ 0)) %>%
# mutate(total_crisis_score = sum(crisis_score)) %>%
# mutate(max_crisis_score = sum(crisis_students) * 4) %>%
# mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
summarize(
REGION,
region_error_percentage,
undercounted_percentage,
# region_districts,
# region_enrollment,
# total_region_crisis_count,
# region_errors,
# crisis_grade,
.groups = "keep"
) %>%
distinct()
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
# mutate(crisis_score = case_when(
#   CRISIS.CODE == "7A" ~ 4 * crisis_students,
#   CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
#   CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
#   CRISIS.CODE == "7E" ~ 1 * crisis_students,
#   CRISIS.CODE == "7B" ~ 0)) %>%
# mutate(total_crisis_score = sum(crisis_score)) %>%
# mutate(max_crisis_score = sum(crisis_students) * 4) %>%
# mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=1)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=1)) %>%
summarize(
REGION,
region_error_percentage,
undercounted_percentage,
# region_districts,
# region_enrollment,
# total_region_crisis_count,
# region_errors,
# crisis_grade,
.groups = "keep"
) %>%
distinct()
library(tidyverse)
library(ggplot2)
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
# mutate(crisis_score = case_when(
#   CRISIS.CODE == "7A" ~ 4 * crisis_students,
#   CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
#   CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
#   CRISIS.CODE == "7E" ~ 1 * crisis_students,
#   CRISIS.CODE == "7B" ~ 0)) %>%
# mutate(total_crisis_score = sum(crisis_score)) %>%
# mutate(max_crisis_score = sum(crisis_students) * 4) %>%
# mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=1)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=1)) %>%
summarize(
REGION,
region_error_percentage,
undercounted_percentage,
# region_districts,
# region_enrollment,
# total_region_crisis_count,
# region_errors,
# crisis_grade,
.groups = "keep"
) %>%
distinct()
esc_region_simplified_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_code_summary = ifelse(CRISIS.CODE == "7A", "Fully Engaged", "All Other variables")) %>%
group_by(REGION, crisis_code_summary) %>%
mutate(crisis_student_count = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_student_count / total_students * 100, digits=2)) %>%
summarize(
REGION,
# region_enrollment,
# crisis_student_count,
crisis_percentage,
.groups = "keep"
) %>%
distinct()
esc_region_simplified_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_code_summary = ifelse(CRISIS.CODE == "7A", "Fully Engaged", "All Other variables")) %>%
group_by(REGION, crisis_code_summary) %>%
mutate(crisis_student_count = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_student_count / total_students * 100, digits=1)) %>%
summarize(
REGION,
# region_enrollment,
# crisis_student_count,
crisis_percentage,
.groups = "keep"
) %>%
distinct()
write.csv(esc_region_summary, "undercounting_and_errors.csv")
write.csv(esc_region_simplified_summary, "crisis_results.csv")
