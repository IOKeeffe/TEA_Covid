large_districts <- statewide_crisis_data %>%
filter(DISTRICT %in% large_district_codes)
large_district_data <- large_districts %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(DISTRICT, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/ENROLLMENT * 100, digits=2)) %>%
mutate(undercounted_crisis_students = subtraction_filter(ENROLLMENT, total_crisis_students)) %>%
summarize(
DISTRICT.NAME,
CRISIS.CODE,
ENROLLMENT,
errors,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students)
statewide_crisis_summary <- statewide_crisis_data %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/statewide_total_enrollment * 100, digits=2)) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(error_percentage = round(statewide_total_errors / statewide_total_entries * 100, digits=2)) %>%
mutate(undercounted_crisis_students = subtraction_filter(statewide_total_enrollment, total_crisis_students)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/statewide_total_enrollment * 100, digits=2)) %>%
summarize(
crisis_students,
crisis_percentage,
statewide_total_enrollment,
total_crisis_students,
CRISIS.CODE,
CRISIS.CODEX,
undercounted_crisis_students,
undercounted_percentage,
errors,
error_percentage) %>%
distinct()
esc_crisis_counts <- merge(region_enrollment_data, esc_enrollment_data, by="REGION") %>%
group_by(REGION) %>%
mutate(region_districts = length(unique(DISTRICT))) %>%
mutate(region_errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_region_crisis_count = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(undercounted_crisis_students = subtraction_filter(region_enrollment, total_region_crisis_count)) %>%
group_by(REGION, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/region_enrollment * 100, digits=2))
# crisis_students is total students counted in data, enrollment is official numbers.
esc_crisis_display <- esc_crisis_counts %>%
summarize(
REGION,
crisis_students,
crisis_percentage,
CRISIS.CODE,
CRISIS.CODEX) %>%
distinct()
# error_percentage is how many errors (missing crisis code or -999 data) an esc region has compared to total possible reporting
# crisis_grade is a score based on how many students are engaged out of max possible.
# undercounted compares crisis reported students vs. official enrollment number
esc_region_summary <- esc_crisis_counts %>%
group_by(REGION) %>%
mutate(total_districts = sum(region_districts)) %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * crisis_students,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * crisis_students,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * crisis_students,
CRISIS.CODE == "7E" ~ 1 * crisis_students,
CRISIS.CODE == "7B" ~ 0)) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(crisis_students) * 4) %>%
mutate(crisis_grade = round(total_crisis_score / max_crisis_score * 100, digits=2)) %>%
mutate(region_error_percentage = round((region_errors/(region_districts * 9)) * 100, digits=2)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/region_enrollment * 100, digits=2)) %>%
# mutate(error_percentage = round(region_errors / region_districts * 9, digits=2)) %>%
summarize(
REGION,
region_districts,
region_enrollment,
total_region_crisis_count,
undercounted_percentage,
region_errors,
region_error_percentage,
crisis_grade,
.groups = "keep"
) %>%
distinct()
large_district_count_errors <- count_errors %>%
filter(DISTRICT %in% large_districts)
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE == "7B" ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT)) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
crisis_code_percentages <- cleaned_data %>%
mutate(total_students = sum(STUDENT.COUNT)) %>%
group_by(CRISIS.CODE) %>%
mutate(CRISIS.PERCENT = mean(round(sum(STUDENT.COUNT)/total_students * 100, digits=2))) %>%
summarize(CRISIS.PERCENT, CRISIS.CODE, .groups = "keep") %>%
distinct()
fully_engaged <- find_extremes("7A")
no_contact <- find_extremes("7B")
# Top 3 No Contact (7B) -> 1: Frisco 2: Cypress-Fairbanks 3: Lewisville
# Contact / Engagement Failures
# Contact / Engagement Failures
# Engaged - list('7A') - 4
# Contact / Engagement Failures
# Engaged - list('7A') - 4
# Complete Reengagement - list('7D', '7G) - 3
# Contact / Engagement Failures
# Engaged - list('7A') - 4
# Complete Reengagement - list('7D', '7G) - 3
# Regressions - list('7C', 7F', '7H', '7I') - 2
# Contact / Engagement Failures
# Engaged - list('7A') - 4
# Complete Reengagement - list('7D', '7G) - 3
# Regressions - list('7C', 7F', '7H', '7I') - 2
# No Engagement - list('7E') - 1
# Contact / Engagement Failures
# Engaged - list('7A') - 4
# Complete Reengagement - list('7D', '7G) - 3
# Regressions - list('7C', 7F', '7H', '7I') - 2
# No Engagement - list('7E') - 1
# No Contact - list ('7B') - points - 0
# Contact / Engagement Failures
# Engaged - list('7A') - 4
# Complete Reengagement - list('7D', '7G) - 3
# Regressions - list('7C', 7F', '7H', '7I') - 2
# No Engagement - list('7E') - 1
# No Contact - list ('7B') - points - 0
# Contact / Engagement Failures
# Engaged - list('7A') - 4
# Complete Reengagement - list('7D', '7G) - 3
# Regressions - list('7C', 7F', '7H', '7I') - 2
# No Engagement - list('7E') - 1
# No Contact - list ('7B') - points - 0
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE == "7B" ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT)) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
large_districts <- statewide_crisis_data %>%
filter(DISTRICT %in% large_district_codes)
large_district_data <- large_districts %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(DISTRICT, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/ENROLLMENT * 100, digits=2)) %>%
mutate(undercounted_crisis_students = subtraction_filter(ENROLLMENT, total_crisis_students)) %>%
summarize(
DISTRICT.NAME,
CRISIS.CODE,
ENROLLMENT,
errors,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students)
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE == "7B" ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT)) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE == "7B" ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE == "7B" ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE == "7B" ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE == "7B" ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT[STUDENT.COUNT != -999]) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE == "7B" ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT[STUDENT.COUNT != -999]) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE %in% list('7B', -999) ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT[STUDENT.COUNT != -999]) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE %in% list('7B', -999) ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT[STUDENT.COUNT != -999]) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
large_district_codes <- list(246909, 61902, 43910, 101917, 101915, 57909, 71902, 220901, 43905, 101902, 15910, 79907, 220905, 101914, 227901, 101907, 57905, 15915, 101912)
large_districts <- statewide_crisis_data %>%
filter(DISTRICT %in% large_district_codes)
scored_districts <- large_districts %>%
mutate(CRISIS.SCORE = case_when(
CRISIS.CODE == "7A" ~ 4 * STUDENT.COUNT,
CRISIS.CODE %in% list('7D', '7G') ~ 3 * STUDENT.COUNT,
CRISIS.CODE %in% list('7C', '7F', '7H', '7I') ~ 2 * STUDENT.COUNT,
CRISIS.CODE == "7E" ~ 1 * STUDENT.COUNT,
CRISIS.CODE %in% list('7B', -999) ~ 0)) %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(total_crisis_score = sum(CRISIS.SCORE)) %>%
mutate(max_crisis_score = sum(STUDENT.COUNT[STUDENT.COUNT != -999]) * 4) %>%
mutate(crisis_grade = total_crisis_score / max_crisis_score) %>%
summarize(DISTRICT.NAME, crisis_grade, total_students, errors, .groups = "keep") %>%
distinct()
View(esc_crisis_data)
View(esc_crisis_display)
View(esc_region_summary)
statewide_crisis_summary <- statewide_crisis_data %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/statewide_total_enrollment * 100, digits=2)) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_error_percentage = round(statewide_total_errors / statewide_total_entries * 100, digits=2)) %>%
mutate(crisis_error_percentage = round(errors / statewide_total_districts * 100, digits=2)) %>%
mutate(undercounted_crisis_students = subtraction_filter(statewide_total_enrollment, total_crisis_students)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/statewide_total_enrollment * 100, digits=2)) %>%
summarize(
crisis_students,
crisis_percentage,
statewide_total_enrollment,
total_crisis_students,
CRISIS.CODE,
CRISIS.CODEX,
undercounted_crisis_students,
undercounted_percentage,
errors,
crisis_error_percentage,
total_error_percentage) %>%
distinct()
statewide_crisis_summary <- statewide_crisis_data %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/statewide_total_enrollment * 100, digits=2)) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_error_percentage = round(statewide_total_errors / statewide_total_entries * 100, digits=2)) %>%
mutate(crisis_error_percentage = round(errors / statewide_total_districts * 100, digits=2)) %>%
mutate(undercounted_crisis_students = subtraction_filter(statewide_total_enrollment, total_crisis_students)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/statewide_total_enrollment * 100, digits=2)) %>%
summarize(
crisis_students,
crisis_percentage,
statewide_total_enrollment,
total_crisis_students,
undercounted_crisis_students,
undercounted_percentage,
CRISIS.CODE,
CRISIS.CODEX,
errors,
crisis_error_percentage,
total_error_percentage) %>%
distinct()
statewide_crisis_summary <- statewide_crisis_data %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/statewide_total_enrollment * 100, digits=2)) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_error_percentage = round(statewide_total_errors / statewide_total_entries * 100, digits=2)) %>%
mutate(crisis_error_percentage = round(errors / statewide_total_districts * 100, digits=2)) %>%
mutate(undercounted_crisis_students = subtraction_filter(statewide_total_enrollment, total_crisis_students)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/statewide_total_enrollment * 100, digits=2)) %>%
summarize(
crisis_students,
crisis_percentage,
statewide_total_enrollment,
total_crisis_students,
undercounted_crisis_students,
undercounted_percentage,
CRISIS.CODE,
CRISIS.CODEX,
errors,
crisis_error_percentage,
total_error_percentage) %>%
distinct()
library(tidyverse)
library(tidyverse)
banks <- read.csv("arlington_food_banks.csv")
banks <- read.csv("arlington_food_banks.csv")
banks <- read.csv("arlington_food_banks.csv")
banks <- read.csv("arlington_food_banks.csv")
library(tidyverse)
banks <- read.csv("arlington_food_banks.csv")
banks <- read.csv("arlington_food_banks.csv")
banks <- read.csv("C:\Users\iokee\Documents\R\Sandbox\arlington_food_banks.csv")
banks <- read.csv("C:/Users/iokee/Documents/R/Sandbox/arlington_food_banks.csv")
library(tidyverse)
library(ggplot2)
large_district_data <- large_districts %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(DISTRICT, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/ENROLLMENT * 100, digits=2)) %>%
mutate(undercounted_crisis_students = subtraction_filter(ENROLLMENT, total_crisis_students)) %>%
summarize(
DISTRICT.NAME,
CRISIS.CODE,
ENROLLMENT,
errors,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students)
View(large_district_data)
large_district_data <- large_districts %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(DISTRICT, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/ENROLLMENT * 100, digits=2)) %>%
mutate(undercounted_crisis_students = subtraction_filter(ENROLLMENT, total_crisis_students)) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/ENROLLMENT * 100, digits=2)) %>%
summarize(
DISTRICT.NAME,
CRISIS.CODE,
ENROLLMENT,
errors,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students,
undercounted_percentage,
)
large_district_data <- large_districts %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(DISTRICT, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/ENROLLMENT * 100, digits=2)) %>%
# mutate(undercounted_crisis_students = subtraction_filter(ENROLLMENT, total_crisis_students)) %>%
mutate(undercounted_crisis_students = ENROLLMENT - total_crisis_students) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/ENROLLMENT * 100, digits=2)) %>%
summarize(
DISTRICT.NAME,
CRISIS.CODE,
ENROLLMENT,
errors,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students,
undercounted_percentage,
)
large_district_data <- large_districts %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(error_percentage = round(errors/9 * 100, digits=2 )) %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(DISTRICT, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/ENROLLMENT * 100, digits=2)) %>%
mutate(undercounted_crisis_students = ENROLLMENT - total_crisis_students) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/ENROLLMENT * 100, digits=2)) %>%
summarize(
DISTRICT.NAME,
CRISIS.CODE,
ENROLLMENT,
errors,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students,
undercounted_percentage,
)
large_district_data <- large_districts %>%
group_by(DISTRICT) %>%
mutate(errors = sum(STUDENT.COUNT == -999)) %>%
mutate(error_percentage = round(errors/9 * 100, digits=2 )) %>%
mutate(total_crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
group_by(DISTRICT, CRISIS.CODE) %>%
mutate(crisis_students = sum(STUDENT.COUNT[STUDENT.COUNT != -999])) %>%
mutate(crisis_percentage = round(crisis_students/ENROLLMENT * 100, digits=2)) %>%
mutate(undercounted_crisis_students = ENROLLMENT - total_crisis_students) %>%
mutate(undercounted_percentage = round(undercounted_crisis_students/ENROLLMENT * 100, digits=2)) %>%
summarize(
DISTRICT.NAME,
CRISIS.CODE,
ENROLLMENT,
errors,
error_percentage,
total_crisis_students,
crisis_students,
crisis_percentage,
undercounted_crisis_students,
undercounted_percentage,
)
esc_crisis_display
esc_crisis_display$CRISIS.CODEX %>% distinct()
library(tidyverse)
library(ggplot2)
esc_crisis_display$CRISIS.CODEX %>% distinct()
esc_crisis_display$CRISIS.CODEX %>% distinct()
esc_crisis_display$CRISIS.CODEX
esc_crisis_display$CRISIS.CODEX %>% unique()
